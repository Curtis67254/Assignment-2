using System.ComponentModel;
using System.Diagnostics.Eventing.Reader;

namespace Assignment_2
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

       
        public static string sTeam { get; set; }
        public static string iTotal { get; set; }

        private void Form1_Load(object sender, EventArgs e)
        {
            //array for combobox

            string[] sTeams = new string[] { "1", "2", "3", "4", };

            

            //populating dropdown
            for (int iCount = 0; iCount < sTeams.Length; iCount++)
            {
                comboBox1.Items.Add(sTeams[iCount]);
            }

            //making sure text boxes are clear on form load

            txtBull.Clear();
            txtBurger.Clear();
            txtBurp.Clear();
            txtPidgeRace.Clear();
            txtSpkJmp.Clear();

            //disabling the enter button before datais entered to stop program from breaking 

            btnEnter.Enabled = false;

            //function used to disable enter button
            TextEntered();
        }

        private void listView1_SelectedIndexChanged(object sender, EventArgs e)
        {

        }

        private void label1_Click_1(object sender, EventArgs e)
        {

        }

        private void comboBox1_SelectedIndexChanged(object sender, EventArgs e)
        {
            TextEntered();
            lblTeamChangeNo.Text = comboBox1.Text;
        }

        private void btnEnter_Click(object sender, EventArgs e)
        {
            string sTeam = (comboBox1.Text);

            //converting user input into string

            int iBull = Convert.ToInt32(txtBull.Text);
            int iPidge = Convert.ToInt32(txtPidgeRace.Text);
            int iSpkJmp = Convert.ToInt32(txtSpkJmp.Text);
            int iBurger = Convert.ToInt32(txtBurger.Text);
            int iBurpies = Convert.ToInt32(txtBurp.Text);

            //Sum of scores

            int iTotal = (iBull + iPidge + iSpkJmp + iBurger + iBurpies);

            //creating a list

            ListViewItem listview = new ListViewItem(sTeam.ToString());
            listview.SubItems.Add(iBull.ToString());
            listview.SubItems.Add(iPidge.ToString());
            listview.SubItems.Add(iSpkJmp.ToString());
            listview.SubItems.Add(iBurger.ToString());
            listview.SubItems.Add(iBurpies.ToString());
            listview.SubItems.Add(iTotal.ToString());
            //adding to list box

            listView.Items.Add(listview);

            //clear text boxes

            txtBull.Clear();
            txtBurger.Clear();
            txtBurp.Clear();
            txtPidgeRace.Clear();
            txtSpkJmp.Clear();
        }

        private void pictureBox1_Click(object sender, EventArgs e)
        {

        }

        private void label1_Click(object sender, EventArgs e)
        {

        }


        private void lblScoring_Click(object sender, EventArgs e)
        {
            Form2 form2 = new Form2();
            form2.Tag = this;
            form2.Show(this);
            Hide();
        }

        //disabling enter button until data is present
        private void TextEntered()
        {
            if (string.IsNullOrWhiteSpace(txtBull.Text)
                || string.IsNullOrWhiteSpace(txtBurger.Text)
                || string.IsNullOrWhiteSpace(txtSpkJmp.Text)
                || string.IsNullOrWhiteSpace(txtBurp.Text)
                || string.IsNullOrWhiteSpace(txtPidgeRace.Text))
            {
                btnEnter.Enabled = false;
            }
            else
            {
                btnEnter.Enabled = true;
            }
        }

        private void txtBull_TextChanged(object sender, EventArgs e)
        {
            TextEntered();
        }

        private void txtPidgeRace_TextChanged(object sender, EventArgs e)
        {
            TextEntered();
        }

        private void txtSpkJmp_TextChanged(object sender, EventArgs e)
        {
            TextEntered();
        }

        private void txtBurger_TextChanged(object sender, EventArgs e)
        {
            TextEntered();
        }

        private void txtBurp_TextChanged(object sender, EventArgs e)
        {
            TextEntered();
        }

        private void btnSave_Click(object sender, EventArgs e)
        {
            if (listView.Items.Count == 0)
            {
                MessageBox.Show("Nothing to save");
            }
            else
            {
                using (StreamWriter sw = File.CreateText("Totals.txt"))
                {
                    foreach (ListViewItem item in listView.Items)
                    {
                        string strText = " ";

                        for (int i = 0; i < item.SubItems.Count; i++)
                        {
                            strText += " " + item.SubItems[i].Text + ",";
                        }
                        sw.WriteLine(strText);
                    }
                }
            }
            
        }

        private void btnLoad_Click(object sender, EventArgs e)
        {
            using (StreamReader sr = new StreamReader("Totals.txt"))
            {
                while (sr.Peek() >= 0)
                {
                    string[] columns = sr.ReadLine().Split(',');

                    listView.Items.Add(new ListViewItem(columns));
                }
            }
        }

        private void btnClear_Click(object sender, EventArgs e)
        {
            if (listView.SelectedIndices.Count > 0)
            {
                DialogResult result = MessageBox.Show("Are you sure you want to delete this item?", "Confirmation", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                if (result == DialogResult.Yes)
                {
                    int selectedIndex = listView.SelectedIndices[0];
                    listView.Items.RemoveAt(selectedIndex);
                }
                else
                {
                    MessageBox.Show("Cancel?");
                }
            }


            else
            {
                MessageBox.Show("Please select an item to clear.");
            }
        }
      
        private void btnGetRank_Click(object sender, EventArgs e)
        {
            Results results = new Results();
            results.Tag = this;
            results.Show(this);
            Hide();
        }
    }
}
